clear
close all

%% Load ADC Data
load('Data\ADC_Data\adcDataStruct.mat', 'adcDataStruct');


% note
% ch1 = VH, RX1TX1 V1H1
% ch2 = VV, RX1TX2 V1V2
% ch3 = , RX1TX3 
% ch4 =  RX1TX4 
% ch5 = HH, RX2TX1 H2H1
% ch6 = HV, RX2TX2 H2V2
% ch7 = HV, RX3TX2 H2V2

%% Parameters
nTXChannelsForAnalysis = 4;  % Number of TX channels for analysis
nRXChannelsForAnalysis = 4;  % Number of RX channels for analysis

% Initialize a structure to store the processed data
processedDataStruct = struct();

%% Process Data
fields = fieldnames(adcDataStruct);
for iField = 1:length(fields)
    classLabel = fields{iField};
    adcData = adcDataStruct.(classLabel);

    % Initialize storage for the processed data
    processedDataStruct.(classLabel) = [];

    for iFile = 1:length(adcData)
        ADCDataIn = adcData(iFile).ADCData.Data;  % Load the ADC data
        [nRangeBins, nDopplerBins, nChannels] = size(ADCDataIn);
        
        nRealDopplerBins = nDopplerBins/4;
        
        % Initialize storage for the processed data for the current file
        rangeDopplerOutput = zeros(nRangeBins, nRealDopplerBins, nRXChannelsForAnalysis, nTXChannelsForAnalysis);


        % Process each channel
        for ch = 1:nChannels
            if ~isempty(ADCDataIn(:,:,ch))
                % Extract the channel data
                channelData = double(ADCDataIn(:,:,ch));
                
                % Range FFT
                hannWindowRange = (repmat(hanning(nRangeBins),1,nDopplerBins,nChannels));
                rangeFFT = fft(channelData .* hannWindowRange, [], 1) / nRangeBins;
                
                % rx,tx % rx combination are flipped
                rangeFffTxSeperated(:,:,:,1) = rangeFFT(:,1:4:512,:); % tx separation
                rangeFffTxSeperated(:,:,:,2) = rangeFFT(:,2:4:512,:); % tx separation
                rangeFffTxSeperated(:,:,:,3) = rangeFFT(:,3:4:512,:); % tx separation
                rangeFffTxSeperated(:,:,:,4) = rangeFFT(:,4:4:512,:); % tx separation
                
                
                % Doppler FFT
                hannWindowDoppler_ = repmat(hanning(128),1,nRangeBins,4,4);
                hannWindowDoppler = permute(hannWindowDoppler_ ,[2,1,3,4]);
                rangeDopplerFFT = fftshift(fft(rangeFffTxSeperated.* hannWindowDoppler, [], 2), 2) / nRealDopplerBins ;
                
                % Select the right RX TX combination
                iRx =  rem(ch-1,4)+1;
                iTx =  rem((ch-1)/4)+1;

                % Store the processed data for the channel
                rangeDopplerOutput(:,:,iRx, :) = rangeDopplerFFT;
            end
        end
        
        % Store the processed data for the current file
        processedDataStruct.(classLabel)(iFile).ProcessedData = adcData(iFile).ADCData;
        processedDataStruct.(classLabel)(iFile).ProcessedData.Data = rangeDopplerOutput;
        processedDataStruct.(classLabel)(iFile).fileName = adcData(iFile).fileName;
    end
end


%% Save the processed data
save('Data\Processed_Data\processedDataStruct.mat', 'processedDataStruct', '-v7.3');

fprintf('Processing the data complete. Data saved to processedDataStruct.mat\n');